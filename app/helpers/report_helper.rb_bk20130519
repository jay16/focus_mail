#encoding:utf-8
module ReportHelper
  
 #发送报告首页 数据收集
 def report_index(campaign_id)
  campaign = Campaign.find(campaign_id)
  clicks   = Click.select("count(member_id) as click_num,count(distinct member_id) as click_peo").where("campaign_id = #{campaign_id}")
  tracks   = Track.select("count(member_id) as track_num,count(distinct member_id) as track_peo").where("campaign_id = #{campaign_id}")
  send_num = 0
  send_ok  = 0 
  mem_num  = 0
  mem_valid = 0

  #list_list = userorg_list(current_user.id, "List")
  list_list = Array.new
  campaign.campaign_lists.each do |campaign_list|
    list_list.push(campaign_list.list_id)
  end
  if list_list.present?
    mem_num  = ListsMembers.select("count(distinct member_id) as member_num")
               .where("list_id in (#{list_list.join(',')})")[0].member_num
    mem_valid =  ListsMembers.select("count(distinct member_id) as member_num")
               .where("list_id in (#{list_list.join(',')}) and member_id in (select members.id from members where members.type_email in (1,4,5))")[0].member_num
  end

   dog_data = DogData.select("sum(send_num) AS send_num,sum(send_ok) AS send_ok")
                     .where("campaign_id=#{campaign_id}").group("campaign_id")[0]

   send_num = dog_data.send_num
   send_ok  = dog_data.send_ok
  

  return {
   :campaign => campaign,
   :click_num => clicks[0].click_num,
   :click_peo => clicks[0].click_peo,
   :track_num => tracks[0].track_num,
   :track_peo => tracks[0].track_peo,
   :send_num  => send_num,
   :send_ok   => send_ok,
   :mem_num   => mem_num,
   :mem_valid => mem_valid
  }
 end
 
   #发送报告   点击、开信图表，以小时为x坐标轴
   #点击、开信用户动作时间比例图表
  def g_chart_hour(clicks,tracks)
    x_label=[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23]

    click_data = Array.new
    (0..23).each_with_index do |index,no|
      tmp = clicks.select { |i| i.hour == index }[0]
      click_data.push(tmp==nil ? 0 :tmp.num)
    end
    
    track_data = Array.new
    (0..23).each_with_index do |index,no|
      tmp = tracks.select { |i| i.hour == index }[0]
      track_data.push(tmp==nil ? 0 :tmp.num)
    end

    
    @h = LazyHighCharts::HighChart.new('graph') do |f|
      f.options[:chart][:type] = "line"
      f.options[:chart][:height] = "500"
      f.options[:chart][:width] = "800"
      f.options[:legend][:align] = "center"
      f.options[:legend][:verticalAlign] = "bottom"
      f.options[:title][:text] = '开信、点击数据小时分布图'
      #鼠标悬停显示数据后缀
      #f.options[:tooltip][:valuePrefix] = "次"
      #f.options[:tooltip][:valueSuffix] = "次"


      f.xAxis(:categories=> x_label)
      f.series({:name=> '点击次数' , :data=> click_data})
      f.series({:name=> '开信次数' , :data=> track_data})
      f.tooltip({:enabled => true })
    end
  end
  
  #点击、开信用户邮箱域名比例图表
  def g_chart_domain(campaign_id,domain_type)
    if(domain_type=="track")
      array = Track.find(:all,
                   :select => "count(*) as count,right(members.email,length(members.email)-locate('@',members.email)) as domain",
                   :joins => "LEFT JOIN members ON tracks.member_id = members.id",
                   :conditions => ["tracks.campaign_id = ?", campaign_id],
                   :group => "right(members.email,length(members.email)-locate('@',members.email))")
    else
      array = Click.find(:all,
                   :select => "count(*) as count,right(members.email,length(members.email)-locate('@',members.email)) as domain",
                   :joins => "LEFT JOIN members ON clicks.member_id = members.id",
                   :conditions => ["clicks.campaign_id = ?", campaign_id],
                   :group => "right(members.email,length(members.email)-locate('@',members.email))")
    end
    datas     = Array.new
    all_count = 0
    array.each do |track|
      datas.push([track.domain,track.count])
      all_count += track.count
    end
    #根据域名数量排名
    datas.sort {|x,y| y[1] <=> x[1] }
    rank      = Array.new
    rank_num  = 10
    other_num = 0
    #取其前五名
    datas.each do |data|
      if rank_num >0 then
        rank.push([data[0],(Float(data[1])/Float(all_count)*100).round(1)])
        rank_num -= 1
      else
        other_num += data[1]
      end
    end
    leave = 100
    rank.each do |r|
      leave -= r[1]
    end
    rank.push(["other",Float(leave).round(1)])
    
    h = LazyHighCharts::HighChart.new('graph') do |f|
      f.options[:chart][:type] = "pie"
      f.options[:chart][:height] = "400"
      f.options[:chart][:width] = "550"
      f.options[:title][:text] = (domain_type == "track" ? '开信用户邮箱域名比例图' : '点击用户邮箱域名比例图')
      f.options[:legend][:align] = "center"
      f.options[:legend][:verticalAlign] = "top"

      f.tooltip({:pointFormat => '{series.name}: <b>{point.percentage}%</b>',
                 :percentageDecimals => 1})
      f.plotOptions({:pie => { :allowPointSelect => true,
                               :cursor => 'pointer',
                               :dataLabels => { :enabled => true,
                                                :color => '#000000',
                                                :connectorColor => '#000000',
                                                :percentageDecimals => 1,
                                                :formatter => %|function(){
                                                  return '<b>'+ this.point.name +'</b> '+ this.point.percentage +' %';
                                                }|.js_code
                                               }
                              }
                      })   
      f.series({:type => "pie",
                :name => "域名比例",
                :data => rank})


      f.tooltip({:enabled => true })
    end
  
  end
 #有效名单域名比例
  def g_chart_member(campaign_id)
    campaign = Campaign.find(campaign_id)
    campaign_lists = campaign.campaign_lists
    lists = Array.new
    campaign_lists.each do |cl|
      lists.push(cl.list_id)
    end
    
    array = ListsMembers.find(:all,
                 :select => "count(*) as count,right(members.email,length(members.email)-locate('@',members.email)) as dd",
                 :joins => "LEFT JOIN members ON lists_members.member_id = members.id",
                 :conditions => ["lists_members.list_id in (#{lists.join(',')})"],
                 :group => "right(members.email,length(members.email)-locate('@',members.email))")

    datas     = Array.new
    all_count = 0
    array.each do |data|
      datas.push([data.dd,data.count])
      all_count += data.count
    end
    #根据域名数量排名
    datas.sort {|x,y| y[1] <=> x[1] }
    rank      = Array.new
    rank_num  = 10
    other_num = 0
    #取其前五名
    datas.each do |data|
      if rank_num >0 then
        rank.push([data[0],(Float(data[1])/Float(all_count)*100).round(1)])
        rank_num -= 1
      else
        other_num += data[1]
      end
    end
    leave = 100
    rank.each do |r|
      leave -= r[1]
    end
    rank.push(["other",Float(leave).round(1)])
    
    h = LazyHighCharts::HighChart.new('graph') do |f|
      f.options[:chart][:type] = "pie"
      f.options[:chart][:height] = "500"
      f.options[:chart][:width] = "800"
      f.options[:title][:text] = '该活动涉及名单中有效名单域名比例图'
      f.options[:legend][:align] = "center"
      f.options[:legend][:verticalAlign] = "top"

      f.tooltip({:pointFormat => '{series.name}: <b>{point.percentage}%</b>',
                 :percentageDecimals => 1})
      f.plotOptions({:pie => { :allowPointSelect => true,
                               :cursor => 'pointer',
                               :dataLabels => { :enabled => true,
                                                :color => '#000000',
                                                :connectorColor => '#000000',
                                                :percentageDecimals => 1,
                                                :formatter => %|function(){
                                                  return '<b>'+ this.point.name +'</b>: '+ this.percentage +' %';
                                                }|.js_code
                                               }
                              }
                      })   
      f.series({:type => "pie",
                :name => "域名比例",
                :data => rank })


      f.tooltip({:enabled => true })
    end
    
  end
  
   #点击、开信用户浏览器比例图表
  def g_chart_browser(campaign_id)

    h = LazyHighCharts::HighChart.new('graph') do |f|
      f.options[:chart][:type] = "pie"
      f.options[:chart][:height] = "500"
      f.options[:chart][:width] = "800"
      f.options[:title][:text] = '开信用户浏览器使用比例图'
      f.options[:legend][:align] = "center"
      f.options[:legend][:verticalAlign] = "top"

      f.tooltip({:pointFormat => '{series.name}: <b>{point.percentage}%</b>',
                 :percentageDecimals => 1})
      f.plotOptions({:pie => { :allowPointSelect => true,
                               :cursor => 'pointer',
                               :dataLabels => { :enabled => true,
                                                :color => '#000000',
                                                :connectorColor => '#000000',
                                                :percentageDecimals => 1,
                                                :formatter => %|function(){
                                                  return '<b>'+ this.point.name +'</b>: '+ this.percentage +' %';
                                                }|.js_code
                                               }
                              }
                      })   
      f.series({:type => "pie",
                :name => "browser share",
                :data => [['Fire Fox',45.0],
                          ['IE',24],
                          {:name => 'chrome',
                           :y    => 11,
                           :sliced => true,
                           :selected => true},
                           ['Safari',8.2],
                           ['Opera',5.8],
                           ['other',6]]})


      f.tooltip({:enabled => true })
    end
  end
   #点击、开信用户地域比例图表
  def g_chart_usermap(campaign_id)

    h = LazyHighCharts::HighChart.new('graph') do |f|
      f.options[:chart][:type] = "pie"
      f.options[:chart][:height] = "500"
      f.options[:chart][:width] = "800"
      f.options[:title][:text] = '开信用户城市分布比例图'
      f.options[:legend][:align] = "center"
      f.options[:legend][:verticalAlign] = "top"

      f.tooltip({:pointFormat => '{series.name}: <b>{point.percentage}%</b>',
                 :percentageDecimals => 1})
      f.plotOptions({:pie => { :allowPointSelect => true,
                               :cursor => 'pointer',
                               :dataLabels => { :enabled => true,
                                                :color => '#000000',
                                                :connectorColor => '#000000',
                                                :percentageDecimals => 1,
                                                :formatter => %|function(){
                                                  return '<b>'+ this.point.name +'</b>: '+ this.percentage +' %';
                                                }|.js_code
                                               }
                              }
                      })   
      f.series({:type => "pie",
                :name => "browser share",
                :data => [['上海',45.0],
                          ['江苏',24],
                          {:name => '广州',
                           :y    => 11,
                           :sliced => true,
                           :selected => true},
                           ['浙江',8.2],
                           ['南京',5.8],
                           ['其他',6]]})


      f.tooltip({:enabled => true })
    end
  end
  
end
